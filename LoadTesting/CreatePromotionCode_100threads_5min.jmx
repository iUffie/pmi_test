<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1581290358">
            <stringProp name="48625">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="1572">15</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="CreatePromotionCode body" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="PromotionCodeTemplate.Code" elementType="Argument">
              <stringProp name="Argument.name">PromotionCodeTemplate.Code</stringProp>
              <stringProp name="Argument.value">PCT-0000000175</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда local" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">8005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда PREPROD" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">10.14.20.56</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">8005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">01svS9F25OrD</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">telecontact</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">telecontact</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value">10.14.20.10</stringProp>
              <stringProp name="Argument.desc">${__property(identityUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value">30067</stringProp>
              <stringProp name="Argument.desc">${__property(identityPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.desc">${__property(identityProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value">9487BBAE7E2DA064289A6DA5D4B209BE</stringProp>
              <stringProp name="Argument.desc">${__property(clientId,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value">CEA413F0D6C3384836A0A5222D3D00CEAF9220723EC373B840F905D6322E8612</stringProp>
              <stringProp name="Argument.desc">${__property(clientSecret,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Stand data (DEV2)" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">30205</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value">141BAC1A200E117D30603E84BE76690E</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value">290E0C3DDE78995EA805E37FDA127E68051DC15EB8393E03C5A9BB27392A2A66</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value">30300</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">telephony</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">telephony</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CreatePromotionCode" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Get clients config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">clients.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">Consumer.Code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager BASIC" enabled="false">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url"></stringProp>
                <stringProp name="Authorization.username">${httpBasicUserName}</stringProp>
                <stringProp name="Authorization.password">${httpBasicUserPassword}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="OAuth 2.0 Authorization" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OAuth 2.0 Authorization" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">client_credentials</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.14.20.10</stringProp>
              <stringProp name="HTTPSampler.port">30067</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/connect/token</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                <collectionProp name="AuthManager.auth_list">
                  <elementProp name="" elementType="Authorization">
                    <stringProp name="Authorization.url"></stringProp>
                    <stringProp name="Authorization.username">${clientId}</stringProp>
                    <stringProp name="Authorization.password">${clientSecret}</stringProp>
                    <stringProp name="Authorization.domain"></stringProp>
                    <stringProp name="Authorization.realm"></stringProp>
                  </elementProp>
                </collectionProp>
                <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
              </AuthManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Access_token" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Access_token</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Запрос" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager OAuth 2.0" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Access_token}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ChatBot.svc/CreatePromotionCode" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;PromotionCodeTemplate&quot;: {&#xd;
    &quot;Code&quot;: &quot;TESTPCT-0000000078&quot;&#xd;
   },&#xd;
   &quot;Consumer&quot;: {&#xd;
     &quot;Code&quot;: &quot;${Consumer.Code}&quot;&#xd;
   }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rrpcrm-preprod.pmru.local</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">0/rest/ChatBotApi/CreatePromotionCode</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\BPM\JMeter\apache-jmeter-6.0.0-SNAPSHOT\csv\summary_20240214_3.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="CreatePromotionCode body" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="PromotionCodeTemplate.Code" elementType="Argument">
              <stringProp name="Argument.name">PromotionCodeTemplate.Code</stringProp>
              <stringProp name="Argument.value">PCT-0000000175</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Consumer.Code" elementType="Argument">
              <stringProp name="Argument.name">Consumer.Code</stringProp>
              <stringProp name="Argument.value">CONS8670</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда local" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">8005</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда CI/CD" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">${__property(creatioUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">${__property(creatioPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">${__property(creatioProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">${__property(userName,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">${__property(httpBasicUserName,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">${__property(httpBasicUserPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value">${__property(identityUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value">${__property(identityPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">${__property(identityProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value">${__property(clientId,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value">${__property(clientSecret,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда DEV1" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">9001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.8</stringProp>
              <stringProp name="Argument.desc">${__property(identityUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value">8991</stringProp>
              <stringProp name="Argument.desc">${__property(identityPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.desc">${__property(identityProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value">6702C7B8C843EBA4655E4DF80C0BB100</stringProp>
              <stringProp name="Argument.desc">${__property(clientId,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value">4397BBF2D7331F75CE9602AB46E5615D664B2DC80046C520F6A926275214E837</stringProp>
              <stringProp name="Argument.desc">${__property(clientSecret,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда DEV2" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">9002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.8</stringProp>
              <stringProp name="Argument.desc">${__property(identityUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value">8992</stringProp>
              <stringProp name="Argument.desc">${__property(identityPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.desc">${__property(identityProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value">6702C7B8C843EBA4655E4DF80C0BB100</stringProp>
              <stringProp name="Argument.desc">${__property(clientId,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value">4397BBF2D7331F75CE9602AB46E5615D664B2DC80046C520F6A926275214E837</stringProp>
              <stringProp name="Argument.desc">${__property(clientSecret,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда DEV3" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">9003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value">10.13.20.8</stringProp>
              <stringProp name="Argument.desc">${__property(identityUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value">8993</stringProp>
              <stringProp name="Argument.desc">${__property(identityPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.desc">${__property(identityProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value">CDE34E6D4936F0B95ECB3E87F769FF4E</stringProp>
              <stringProp name="Argument.desc">${__property(clientId,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value">F228E74ABF86458905EA8EF38E742F7EA8F831133F3FDEF252DE0D986D456A0B</stringProp>
              <stringProp name="Argument.desc">${__property(clientSecret,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Данные стенда UAT" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="creatioUrl" elementType="Argument">
              <stringProp name="Argument.name">creatioUrl</stringProp>
              <stringProp name="Argument.value">b2ccrm-uat.myizapps.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioUrl,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioPort" elementType="Argument">
              <stringProp name="Argument.name">creatioPort</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioPort,,)}</stringProp>
            </elementProp>
            <elementProp name="creatioProtocol" elementType="Argument">
              <stringProp name="Argument.name">creatioProtocol</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(creatioProtocol,,)}</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${__property(userName,,)}</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">Supervisor</stringProp>
              <stringProp name="Argument.desc">${__property(userPassword,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserName" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserName</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="httpBasicUserPassword" elementType="Argument">
              <stringProp name="Argument.name">httpBasicUserPassword</stringProp>
              <stringProp name="Argument.value">pos</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityUrl" elementType="Argument">
              <stringProp name="Argument.name">identityUrl</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">${__property(identityUrl,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityPort" elementType="Argument">
              <stringProp name="Argument.name">identityPort</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">${__property(identityPort,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="identityProtocol" elementType="Argument">
              <stringProp name="Argument.name">identityProtocol</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.desc">${__property(identityProtocol,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientId" elementType="Argument">
              <stringProp name="Argument.name">clientId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">${__property(clientId,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientSecret" elementType="Argument">
              <stringProp name="Argument.name">clientSecret</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">${__property(clientSecret,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CreatePromotionCode" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">clients.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">Consumer.Code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url"></stringProp>
                <stringProp name="Authorization.username">${httpBasicUserName}</stringProp>
                <stringProp name="Authorization.password">${httpBasicUserPassword}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ChatBot.svc/CreatePromotionCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;PromotionCodeTemplate&quot;: {&#xd;
    &quot;Code&quot;: &quot;PCT-0000000078&quot;&#xd;
   },&#xd;
   &quot;Consumer&quot;: {&#xd;
     &quot;Code&quot;: &quot;${Consumer.Code}&quot;&#xd;
   }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${creatioUrl}</stringProp>
            <stringProp name="HTTPSampler.port">${creatioPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${creatioProtocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ServiceModel/ChatBot.svc/CreatePromotionCode</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
